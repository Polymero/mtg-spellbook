// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Spellbox.Model;

#nullable disable

namespace Spellbox.Migrations.OracleDb
{
    [DbContext(typeof(OracleDbContext))]
    partial class OracleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-preview.6.24327.4");

            modelBuilder.Entity("Spellbox.Model.CardVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Artist")
                        .HasColumnType("TEXT");

                    b.Property<string>("CollNum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Finishes")
                        .HasColumnType("TEXT");

                    b.Property<string>("FlavorName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FlavorText")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<string>("OracleCardOracleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rarity")
                        .HasColumnType("TEXT");

                    b.Property<string>("Released")
                        .HasColumnType("TEXT");

                    b.Property<string>("SetCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("SetName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Thumb")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OracleCardOracleId");

                    b.ToTable("CardVariant");
                });

            modelBuilder.Entity("Spellbox.Model.Legalities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Commander")
                        .HasColumnType("TEXT");

                    b.Property<string>("Duel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Explorer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Future")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gladiator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Historic")
                        .HasColumnType("TEXT");

                    b.Property<string>("Legacy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modern")
                        .HasColumnType("TEXT");

                    b.Property<string>("Oathbreaker")
                        .HasColumnType("TEXT");

                    b.Property<string>("Oldschool")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pauper")
                        .HasColumnType("TEXT");

                    b.Property<string>("PauperCommander")
                        .HasColumnType("TEXT");

                    b.Property<string>("Penny")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pioneer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Predh")
                        .HasColumnType("TEXT");

                    b.Property<string>("Premodern")
                        .HasColumnType("TEXT");

                    b.Property<string>("Standard")
                        .HasColumnType("TEXT");

                    b.Property<string>("Timeless")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vintage")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Legalities");
                });

            modelBuilder.Entity("Spellbox.Model.OracleCard", b =>
                {
                    b.Property<string>("OracleId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CMC")
                        .HasColumnType("TEXT");

                    b.Property<string>("ColorIdentity")
                        .HasColumnType("TEXT");

                    b.Property<string>("Colors")
                        .HasColumnType("TEXT");

                    b.Property<string>("Keywords")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LegalitiesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ManaCost")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("OracleText")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeLine")
                        .HasColumnType("TEXT");

                    b.HasKey("OracleId");

                    b.HasIndex("LegalitiesId");

                    b.ToTable("OracleCards");
                });

            modelBuilder.Entity("Spellbox.Model.CardVariant", b =>
                {
                    b.HasOne("Spellbox.Model.OracleCard", null)
                        .WithMany("Variants")
                        .HasForeignKey("OracleCardOracleId");
                });

            modelBuilder.Entity("Spellbox.Model.OracleCard", b =>
                {
                    b.HasOne("Spellbox.Model.Legalities", "Legalities")
                        .WithMany()
                        .HasForeignKey("LegalitiesId");

                    b.Navigation("Legalities");
                });

            modelBuilder.Entity("Spellbox.Model.OracleCard", b =>
                {
                    b.Navigation("Variants");
                });
#pragma warning restore 612, 618
        }
    }
}
